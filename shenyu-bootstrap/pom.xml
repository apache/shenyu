<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.apache.shenyu</groupId>
        <artifactId>shenyu</artifactId>
        <version>${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>shenyu-bootstrap</artifactId>

    <properties>
        <nacos-discovery.version>2021.0.1.0</nacos-discovery.version>
        <eureka-client.version>4.1.2</eureka-client.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--shenyu gateway start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-gateway</artifactId>
        </dependency>

        <!--shenyu param mapping plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-param-mapping</artifactId>
        </dependency>
        <!--shenyu param mapping end-->

        <!-- shenyu waf plugin starter-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-waf</artifactId>
        </dependency>
        <!-- shenyu waf plugin end-->

        <!-- shenyu ratelimiter plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ratelimiter</artifactId>
        </dependency>
        <!-- shenyu ratelimiter plugin end-->

        <!-- shenyu hystrix plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-hystrix</artifactId>
        </dependency>
        <!-- shenyu hystrix plugin end-->

        <!-- shenyu resilience4j plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-resilience4j</artifactId>
        </dependency>
        <!-- shenyu resilience4j plugin end-->

        <!-- shenyu sentinel plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-sentinel</artifactId>
        </dependency>
        <!-- shenyu sentinel plugin end-->

        <!-- shenyu redirect plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-redirect</artifactId>
        </dependency>
        <!-- shenyu redirect plugin end-->

        <!-- shenyu redirect plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-rewrite</artifactId>
        </dependency>
        <!-- shenyu redirect plugin end-->

        <!-- shenyu request plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-request</artifactId>
        </dependency>
        <!-- shenyu request plugin end-->

        <!--shenyu debug plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-console</artifactId>
        </dependency>
        <!--shenyu debug plugin end-->

        <!-- shenyu sign plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-sign</artifactId>
        </dependency>
        <!-- shenyu sign plugin end-->

        <!--shenyu oauth2 plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-oauth2</artifactId>
        </dependency>
        <!--shenyu oauth2 plugin end-->

        <!--shenyu jwt plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-jwt</artifactId>
        </dependency>
        <!--shenyu jwt end-->

        <!--shenyu casdoor plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-casdoor</artifactId>
        </dependency>
        <!--shenyu auth plugin end-->

        <!-- shenyu modify response plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-modify-response</artifactId>
        </dependency>
        <!-- shenyu modify response plugin end-->

        <!--shenyu cryptor plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-cryptor</artifactId>
        </dependency>
        <!--shenyu cryptor end-->

        <!--shenyu general context plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-general-context</artifactId>
        </dependency>
        <!--shenyu general context plugin end-->

        <!--shenyu websocket plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-websocket</artifactId>
        </dependency>
        <!--shenyu websocket plugin end-->

        <!--shenyu metrics plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-metrics</artifactId>
        </dependency>
        <!--shenyu metrics plugin end-->

        <!--shenyu cache plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-cache</artifactId>
        </dependency>
        <!--shenyu cache plugin end-->


        <!--shenyu grpc plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-grpc</artifactId>
        </dependency>
        <!--shenyu grpc plugin end-->

        <!--shenyu tars plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-tars</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tencent.tars</groupId>
            <artifactId>tars-client</artifactId>
        </dependency>
        <!--shenyu tars plugin end-->

        <!--Tcp Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-tcp</artifactId>
        </dependency>
        <!--Tcp Plugin end-->

        <!--Ai proxy Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ai-proxy</artifactId>
        </dependency>
        <!--Ai proxy Plugin end-->
        
        <!--Ai prompt Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ai-prompt</artifactId>
        </dependency>
        <!--Ai prompt Plugin end-->

        <!--Ai token limiter Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ai-token-limiter</artifactId>
        </dependency>
        <!--Ai token limiter Plugin end-->

        <!--Ai request transformer Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ai-request-transformer</artifactId>
        </dependency>
        <!--Ai request transformer Plugin end-->

        <!--Ai response transformer Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-ai-response-transformer</artifactId>
        </dependency>
        <!--Ai response transformer Plugin end-->

        <!--Mcp Server Plugin Start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-mcp-server</artifactId>
        </dependency>
        <!--Mcp Server Plugin end-->

        <!--shenyu sofa plugin start-->
        <dependency>
            <groupId>com.alipay.sofa</groupId>
            <artifactId>sofa-rpc-all</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>net.jcip</groupId>
                    <artifactId>jcip-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-core</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>okio</artifactId>
                    <groupId>com.squareup.okio</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>sofa-common-tools</artifactId>
                    <groupId>com.alipay.sofa.common</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.alipay.sofa.common</groupId>
            <artifactId>sofa-common-tools</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-sofa</artifactId>
        </dependency>
        <!--shenyu sofa plugin end-->

        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-loadbalancer</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
<!--            <version>${eureka-client.version}</version>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.springframework.cloud</groupId>-->
<!--                    <artifactId>spring-cloud-starter-loadbalancer</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-commons</artifactId>
        </dependency>
        <!--shenyu springCloud plugin end-->

        <!--shenyu key-auth plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-key-auth</artifactId>
        </dependency>
        <!--shenyu key-auth plugin end -->

        <!--shenyu mock plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-mock</artifactId>
        </dependency>
        <!--shenyu mock plugin end-->

        <!--shenyu  apache dubbo plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-apache-dubbo</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo</artifactId>
        </dependency>
        <!-- Dubbo Nacos registry dependency -->
        <!--  <dependency>
              <groupId>org.apache.dubbo</groupId>
              <artifactId>dubbo-registry-nacos</artifactId>
              <version>2.7.15</version>
          </dependency>
          <dependency>
              <groupId>com.alibaba.nacos</groupId>
              <artifactId>nacos-client</artifactId>
              <version>2.0.4</version>
          </dependency>-->
        <!-- Dubbo zookeeper registry dependency start -->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-dependencies-zookeeper</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
            <type>pom</type>
        </dependency>
        <!-- Dubbo zookeeper registry dependency end -->
        <!-- shenyu  apache dubbo plugin end-->

        <!--shenyu motan plugin start-->
        <!--If you plan to use the motan plugin and want to use the hessian serialization,
        please check the sofa plugin related dependencies.In particular, the reliance on sofa-hessian should be excluded.
        Because sofa-hessian and caucho-hessian can cause class loading conflicts and cause some unexpected problems-->
        <dependency>
            <groupId>com.weibo</groupId>
            <artifactId>motan-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.weibo</groupId>
            <artifactId>motan-transport-netty4</artifactId>
        </dependency>
        <dependency>
            <groupId>com.weibo</groupId>
            <artifactId>motan-registry-zookeeper</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.weibo</groupId>
            <artifactId>motan-springsupport</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-motan</artifactId>
        </dependency>
        <!--shenyu motan plugin end-->

        <!--shenyu data sync start use zookeeper-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-zookeeper</artifactId>
        </dependency>

        <!--shenyu data sync start use websocket-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-websocket</artifactId>
        </dependency>

        <!--shenyu data sync start use http-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-http</artifactId>
        </dependency>

        <!--shenyu data sync start use nacos-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-nacos</artifactId>
        </dependency>

        <!--shenyu data sync start use etcd-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-etcd</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-grpclb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-netty</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--shenyu debug plugin end-->

        <!--shenyu data sync start use consul-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-consul</artifactId>
        </dependency>
        <!--shenyu registry start-->

        <!--shenyu data sync start use polaris-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-sync-data-polaris</artifactId>
        </dependency>

        <!--shenyu instance start-->

        <!--shenyu registry end-->

        <!--shenyu logging-rocketmq plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-rocketmq</artifactId>
        </dependency>
        <!--shenyu logging-rocketmq plugin end-->

        <!--shenyu logging-kafka plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-kafka</artifactId>
        </dependency>
        <!--shenyu logging-kafka plugin end-->

        <!--shenyu logging-rabbitmq plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-rabbitmq</artifactId>
        </dependency>
        <!--shenyu logging-rabbitmq plugin end-->

        <!--shenyu logging-elasticsearch plugin start-->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-elasticsearch</artifactId>
        </dependency>
        <!--shenyu logging-elasticsearch plugin end-->

        <!-- shenyu logging-aliyunsls plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-aliyun-sls</artifactId>
        </dependency>
        <!-- shenyu logging-aliyunsls plugin end -->

        <!-- shenyu logging-pulsar plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-pulsar</artifactId>
        </dependency>
        <!-- shenyu logging-pulsar plugin end -->

        <!-- shenyu logging-tencentcls plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-tencent-cls</artifactId>
        </dependency>
        <!-- shenyu logging-tencentcls plugin end -->

        <!-- shenyu logging-huaweilts plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-huawei-lts</artifactId>
        </dependency>
        <!-- shenyu logging-huaweilts plugin end -->


        <!-- shenyu logging-clickhouse plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-logging-clickhouse</artifactId>
        </dependency>
        <!-- shenyu logging-clickhouse plugin end -->

        <!-- shenyu kubernetes controller starter -->
<!--        <dependency>-->
<!--            <groupId>org.apache.shenyu</groupId>-->
<!--            <artifactId>shenyu-spring-boot-starter-k8s</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--        </dependency>-->
        <!-- shenyu kubernetes controller end -->

        <!-- shenyu basic-auth plugin start -->
        <dependency>
            <groupId>org.apache.shenyu</groupId>
            <artifactId>shenyu-spring-boot-starter-plugin-basic-auth</artifactId>
        </dependency>
        <!-- shenyu basic-auth plugin end -->

    </dependencies>
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <exclude>*.yml</exclude>
                            <exclude>logback.xml</exclude>
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
    <build>
        <finalName>shenyu-bootstrap</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
