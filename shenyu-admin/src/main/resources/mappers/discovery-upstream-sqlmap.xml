<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.shenyu.admin.mapper.DiscoveryUpstreamMapper">
    <resultMap id="BaseResultMap" type="org.apache.shenyu.admin.model.entity.DiscoveryUpstreamDO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="discovery_handler_id" jdbcType="VARCHAR" property="discoveryHandlerId"/>
        <result column="namespace_id" jdbcType="VARCHAR" property="namespaceId"/>
        <result column="protocol" jdbcType="VARCHAR" property="protocol"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="props" jdbcType="VARCHAR" property="props"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        date_created,
        date_updated,
        discovery_handler_id,
        namespace_id,
        protocol,
        url,
        status,
        weight,
        props
    </sql>

    <select id="existed" resultType="java.lang.Boolean">
        SELECT true
        FROM discovery_upstream
        WHERE id = #{id} LIMIT 1
    </select>

    <insert id="insert" parameterType="org.apache.shenyu.admin.model.entity.DiscoveryUpstreamDO">
        INSERT INTO discovery_upstream (
        id,
        discovery_handler_id,
        namespace_id,
        protocol,
        url,
        status,
        weight,
        props,
        date_created,
        date_updated)
        VALUES (
        #{id, jdbcType=VARCHAR},
        #{discoveryHandlerId,jdbcType=VARCHAR},
        #{namespaceId, jdbcType=VARCHAR},
        #{protocol,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
        #{weight,jdbcType=INTEGER},
        #{props,jdbcType=VARCHAR},
        #{dateCreated, jdbcType=TIMESTAMP},
        #{dateUpdated, jdbcType=TIMESTAMP})
    </insert>

    <update id="update" parameterType="org.apache.shenyu.admin.model.entity.DiscoveryUpstreamDO">
        UPDATE discovery_upstream
        SET
        discovery_handler_id=#{discoveryHandlerId, jdbcType=VARCHAR},
        protocol=#{protocol,jdbcType=VARCHAR},
        url=#{url,jdbcType=VARCHAR},
        status=#{status,jdbcType=INTEGER},
        weight=#{weight,jdbcType=INTEGER},
        props=#{props,jdbcType=VARCHAR},
        date_updated=#{dateUpdated, jdbcType=TIMESTAMP}
        WHERE id=#{id, jdbcType=VARCHAR}
    </update>

    <update id="updateSelective" parameterType="org.apache.shenyu.admin.model.entity.DiscoveryUpstreamDO">
        UPDATE discovery_upstream
        SET
        <if test="discoveryHandlerId != null">
            discovery_handler_id=#{discoveryHandlerId, jdbcType=VARCHAR},
        </if>
        <if test="protocol != null">
            protocol=#{protocol,jdbcType=VARCHAR},
        </if>
        <if test="url != null">
            url=#{url,jdbcType=VARCHAR},
        </if>
        <if test="status != null">
            status=#{status,jdbcType=INTEGER},
        </if>
        <if test="weight != null">
            weight=#{weight,jdbcType=INTEGER},
        </if>
        <if test="props != null">
            props=#{props,jdbcType=VARCHAR},
        </if>
        <if test="dateUpdated != null">
            date_updated=#{dateUpdated, jdbcType=TIMESTAMP}
        </if>
        WHERE id=#{id, jdbcType=VARCHAR}
    </update>

    <update id="updateDiscoveryHandlerIdAndUrl">
        UPDATE discovery_upstream
        SET
        protocol=#{protocol,jdbcType=VARCHAR},
        status=#{status,jdbcType=INTEGER},
        weight=#{weight,jdbcType=INTEGER},
        props=#{props,jdbcType=VARCHAR},
        date_updated=#{dateUpdated, jdbcType=TIMESTAMP}
        WHERE discovery_handler_id=#{id, jdbcType=VARCHAR} and url =#{url}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM discovery_upstream
    </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM discovery_upstream
        WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id, jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="selectByDiscoveryHandlerId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM discovery_upstream
        WHERE discovery_handler_id=#{discoveryHandlerId, jdbcType=VARCHAR}
    </select>

    <select id="selectByProxySelectorId" resultMap="BaseResultMap">
        <include refid="base_join_discovery_rel"/>
        <where>
            dr.proxy_selector_id = #{proxySelectorId , jdbcType=VARCHAR}
        </where>
    </select>

    <select id="selectBySelectorId" resultMap="BaseResultMap">
        <include refid="base_join_discovery_rel"/>
        <where>
            dr.selector_id = #{selectorId , jdbcType=VARCHAR}
        </where>
    </select>

    <select id="selectByNamespaceId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM discovery_upstream
        WHERE namespace_id=#{namespaceId, jdbcType=VARCHAR}
    </select>

    <sql id="base_join_discovery_rel">
        SELECT
        du.id,
        du.date_created,
        du.date_updated,
        du.discovery_handler_id,
        du.protocol,
        du.url,
        du.status,
        du.weight,
        du.props
        FROM discovery_upstream du
        INNER JOIN discovery_rel dr ON du.discovery_handler_id = dr.discovery_handler_id
    </sql>

    <select id="selectByDiscoveryHandlerIdAndUrl"
            resultType="org.apache.shenyu.admin.model.entity.DiscoveryUpstreamDO">
        SELECT <include refid="Base_Column_List"/> from discovery_upstream where discovery_handler_id = #{discoveryHandlerId} and url = #{url} for update
    </select>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM discovery_upstream WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id, jdbcType=VARCHAR}
        </foreach>
    </delete>

    <insert id="saveBatch" parameterType="java.util.List">
        INSERT INTO discovery_upstream (
        id,
        discovery_handler_id,
        namespace_id,
        protocol,
        url,
        status,
        weight,
        props,
        date_created,
        date_updated)
        VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.id, jdbcType=VARCHAR},
            #{item.discoveryHandlerId,jdbcType=VARCHAR},
            #{item.namespaceId,jdbcType=VARCHAR},
            #{item.protocol,jdbcType=VARCHAR},
            #{item.url,jdbcType=VARCHAR},
            #{item.status,jdbcType=INTEGER},
            #{item.weight,jdbcType=INTEGER},
            #{item.props,jdbcType=VARCHAR},
            #{item.dateCreated, jdbcType=TIMESTAMP},
            #{item.dateUpdated, jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <delete id="deleteByDiscoveryHandlerId" parameterType="java.lang.String">
        DELETE FROM discovery_upstream
        WHERE discovery_handler_id = #{discoveryHandlerId, jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByUrl">
        DELETE FROM discovery_upstream WHERE discovery_handler_id = #{discoveryHandlerId} and url = #{url}
    </delete>

    <update id="updateStatusByUrl">
        UPDATE discovery_upstream
        SET status = #{status}
        WHERE discovery_handler_id = #{discoveryHandlerId} and url = #{url}
    </update>

</mapper>
